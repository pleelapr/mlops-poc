# This GitHub workflow performs model deployment to production
# The workflow contents are largely the same as deploy-model-staging.yml but
# we split staging and prod model deployment into separate workflows to simplify
# separately tracking and viewing staging and prod model deployments via GitHub UI and API
#
# This workflow is triggered in an automated manner by the model training job (see notebooks/TriggerModelDeploy.py)
# after model training completes, to enable tracking and enforcing manual approval of model deployments in
# CD, if desired.
name: Prod Model Deployment for mlops-poc

on:
  workflow_dispatch:
    inputs:
      modelUri:
        type: string
        description: "URI of model to deploy, in the format models:/<model-name>/<version-id>"
        required: true

env:
  DATABRICKS_HOST: https://adb-8569209645075352.12.azuredatabricks.net
  NODE_TYPE_ID: Standard_D3_v2

jobs:
  prod:
    runs-on: ubuntu-20.04
    environment: prod
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: GET Databricks ADD Token
        run: |
          DATABRICKS_TOKEN=$(curl --fail -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
                                              "https://login.microsoftonline.com/${{ secrets.prodAzureSpTenantId }}/oauth2/v2.0/token" \
                                              -d "client_id=${{ secrets.prodAzureSpApplicationId }}" \
                                              -d 'grant_type=client_credentials' \
                                              -d 'scope=2ff814a6-3304-4ab8-85cb-cd0e6f879c1d%2F.default' \
                                              -d "client_secret=${{ secrets.prodAzureSpClientSecret }}" |  jq -r  '.access_token')
          echo "DATABRICKS_TOKEN=$DATABRICKS_TOKEN" >> "$GITHUB_ENV"
      # - name: Generate AAD Token
      #   run: ./.github/workflows/scripts/generate-aad-token.sh ${{ secrets.prodAzureSpTenantId }} ${{ secrets.prodAzureSpApplicationId }} ${{ secrets.prodAzureSpClientSecret }}
      - name: Deploy model
        env:
          MLFLOW_TRACKING_URI: databricks
        run: |
          pip install mlflow
          python mlops-poc/deployment/model_deployment/deploy.py "${{ github.event.inputs.modelUri }}" "prod"
